{
  "nodes": [
    {
      "id": 1,
      "type": "Source: Kafka011TableSource(log_id, event_time, user_no, real_ip, login_status, login_code)",
      "pact": "Data Source",
      "contents": "Source: Kafka011TableSource(log_id, event_time, user_no, real_ip, login_status, login_code)",
      "parallelism": 1
    },
    {
      "id": 2,
      "type": "SourceConversion(table=[default_catalog.default_database.kafka_source_table, source: [Kafka011TableSource(log_id, event_time, user_no, real_ip, login_status, login_code)]], fields=[log_id, event_time, user_no, real_ip, login_status, login_code])",
      "pact": "Operator",
      "contents": "SourceConversion(table=[default_catalog.default_database.kafka_source_table, source: [Kafka011TableSource(log_id, event_time, user_no, real_ip, login_status, login_code)]], fields=[log_id, event_time, user_no, real_ip, login_status, login_code])",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 1,
          "ship_strategy": "FORWARD",
          "side": "second"
        }
      ]
    },
    {
      "id": 3,
      "type": "Timestamps/Watermarks",
      "pact": "Operator",
      "contents": "Timestamps/Watermarks",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 2,
          "ship_strategy": "FORWARD",
          "side": "second"
        }
      ]
    },
    {
      "id": 4,
      "type": "Calc(select=[event_time, real_ip], where=[(user_no = _UTF-16LE'0001':VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\")])",
      "pact": "Operator",
      "contents": "Calc(select=[event_time, real_ip], where=[(user_no = _UTF-16LE'0001':VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\")])",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 3,
          "ship_strategy": "FORWARD",
          "side": "second"
        }
      ]
    },
    {
      "id": 6,
      "type": "GroupWindowAggregate(groupBy=[real_ip], window=[SlidingGroupWindow('w$, event_time, 600000, 60000)], properties=[w$start, w$end, w$rowtime, w$proctime], select=[real_ip, COUNT(*) AS countAll, start('w$) AS w$start, end('w$) AS w$end, rowtime('w$) AS w$rowtime, proctime('w$) AS w$proctime])",
      "pact": "Operator",
      "contents": "GroupWindowAggregate(groupBy=[real_ip], window=[SlidingGroupWindow('w$, event_time, 600000, 60000)], properties=[w$start, w$end, w$rowtime, w$proctime], select=[real_ip, COUNT(*) AS countAll, start('w$) AS w$start, end('w$) AS w$end, rowtime('w$) AS w$rowtime, proctime('w$) AS w$proctime])",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 4,
          "ship_strategy": "HASH",
          "side": "second"
        }
      ]
    },
    {
      "id": 7,
      "type": "Calc(select=[w$start AS hop_start, w$end AS hop_end, real_ip, countAll])",
      "pact": "Operator",
      "contents": "Calc(select=[w$start AS hop_start, w$end AS hop_end, real_ip, countAll])",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 6,
          "ship_strategy": "FORWARD",
          "side": "second"
        }
      ]
    },
    {
      "id": 8,
      "type": "SinkConversionToRow",
      "pact": "Operator",
      "contents": "SinkConversionToRow",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 7,
          "ship_strategy": "FORWARD",
          "side": "second"
        }
      ]
    },
    {
      "id": 9,
      "type": "Map",
      "pact": "Operator",
      "contents": "Map",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 8,
          "ship_strategy": "FORWARD",
          "side": "second"
        }
      ]
    },
    {
      "id": 11,
      "type": "Source: Kafka011TableSource(log_id, event_time, user_no, real_ip, login_status, login_code)",
      "pact": "Data Source",
      "contents": "Source: Kafka011TableSource(log_id, event_time, user_no, real_ip, login_status, login_code)",
      "parallelism": 1
    },
    {
      "id": 12,
      "type": "SourceConversion(table=[default_catalog.default_database.kafka_source_table, source: [Kafka011TableSource(log_id, event_time, user_no, real_ip, login_status, login_code)]], fields=[log_id, event_time, user_no, real_ip, login_status, login_code])",
      "pact": "Operator",
      "contents": "SourceConversion(table=[default_catalog.default_database.kafka_source_table, source: [Kafka011TableSource(log_id, event_time, user_no, real_ip, login_status, login_code)]], fields=[log_id, event_time, user_no, real_ip, login_status, login_code])",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 11,
          "ship_strategy": "FORWARD",
          "side": "second"
        }
      ]
    },
    {
      "id": 13,
      "type": "Timestamps/Watermarks",
      "pact": "Operator",
      "contents": "Timestamps/Watermarks",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 12,
          "ship_strategy": "FORWARD",
          "side": "second"
        }
      ]
    },
    {
      "id": 14,
      "type": "Calc(select=[event_time, real_ip], where=[(user_no = _UTF-16LE'0001':VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\")])",
      "pact": "Operator",
      "contents": "Calc(select=[event_time, real_ip], where=[(user_no = _UTF-16LE'0001':VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\")])",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 13,
          "ship_strategy": "FORWARD",
          "side": "second"
        }
      ]
    },
    {
      "id": 16,
      "type": "GroupWindowAggregate(groupBy=[real_ip], window=[SlidingGroupWindow('w$, event_time, 600000, 60000)], properties=[w$start, w$end, w$rowtime, w$proctime], select=[real_ip, COUNT(*) AS countAll, start('w$) AS w$start, end('w$) AS w$end, rowtime('w$) AS w$rowtime, proctime('w$) AS w$proctime])",
      "pact": "Operator",
      "contents": "GroupWindowAggregate(groupBy=[real_ip], window=[SlidingGroupWindow('w$, event_time, 600000, 60000)], properties=[w$start, w$end, w$rowtime, w$proctime], select=[real_ip, COUNT(*) AS countAll, start('w$) AS w$start, end('w$) AS w$end, rowtime('w$) AS w$rowtime, proctime('w$) AS w$proctime])",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 14,
          "ship_strategy": "HASH",
          "side": "second"
        }
      ]
    },
    {
      "id": 17,
      "type": "Calc(select=[w$start AS hop_start, w$end AS hop_end, real_ip, countAll])",
      "pact": "Operator",
      "contents": "Calc(select=[w$start AS hop_start, w$end AS hop_end, real_ip, countAll])",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 16,
          "ship_strategy": "FORWARD",
          "side": "second"
        }
      ]
    },
    {
      "id": 18,
      "type": "SinkConversionToRow",
      "pact": "Operator",
      "contents": "SinkConversionToRow",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 17,
          "ship_strategy": "FORWARD",
          "side": "second"
        }
      ]
    },
    {
      "id": 10,
      "type": "Sink: CsvTableSink(hop_start, hop_end, real_ip, countAll)",
      "pact": "Data Sink",
      "contents": "Sink: CsvTableSink(hop_start, hop_end, real_ip, countAll)",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 9,
          "ship_strategy": "FORWARD",
          "side": "second"
        }
      ]
    },
    {
      "id": 19,
      "type": "Sink: Kafka011TableSink(hop_start, hop_end, real_ip, countAll)",
      "pact": "Data Sink",
      "contents": "Sink: Kafka011TableSink(hop_start, hop_end, real_ip, countAll)",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 18,
          "ship_strategy": "FORWARD",
          "side": "second"
        }
      ]
    }
  ]
}
