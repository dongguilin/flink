{
  "nodes": [
    {
      "id": 1,
      "type": "Source: Kafka011TableSource(log_id, event_time, user_no, real_ip, login_status, login_code)",
      "pact": "Data Source",
      "contents": "Source: Kafka011TableSource(log_id, event_time, user_no, real_ip, login_status, login_code)",
      "parallelism": 1
    },
    {
      "id": 2,
      "type": "SourceConversion(table=[default_catalog.default_database.kafka_source_table, source: [Kafka011TableSource(log_id, event_time, user_no, real_ip, login_status, login_code)]], fields=[log_id, event_time, user_no, real_ip, login_status, login_code])",
      "pact": "Operator",
      "contents": "SourceConversion(table=[default_catalog.default_database.kafka_source_table, source: [Kafka011TableSource(log_id, event_time, user_no, real_ip, login_status, login_code)]], fields=[log_id, event_time, user_no, real_ip, login_status, login_code])",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 1,
          "ship_strategy": "FORWARD",
          "side": "second"
        }
      ]
    },
    {
      "id": 3,
      "type": "Calc(select=[log_id, event_time, CAST(_UTF-16LE'0001':VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\") AS user_no, login_status], where=[(user_no = _UTF-16LE'0001':VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\")])",
      "pact": "Operator",
      "contents": "Calc(select=[log_id, event_time, CAST(_UTF-16LE'0001':VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\") AS user_no, login_status], where=[(user_no = _UTF-16LE'0001':VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\")])",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 2,
          "ship_strategy": "FORWARD",
          "side": "second"
        }
      ]
    },
    {
      "id": 4,
      "type": "SinkConversionToRow",
      "pact": "Operator",
      "contents": "SinkConversionToRow",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 3,
          "ship_strategy": "FORWARD",
          "side": "second"
        }
      ]
    },
    {
      "id": 6,
      "type": "Source: Kafka011TableSource(log_id, event_time, user_no, real_ip, login_status, login_code)",
      "pact": "Data Source",
      "contents": "Source: Kafka011TableSource(log_id, event_time, user_no, real_ip, login_status, login_code)",
      "parallelism": 1
    },
    {
      "id": 7,
      "type": "SourceConversion(table=[default_catalog.default_database.kafka_source_table, source: [Kafka011TableSource(log_id, event_time, user_no, real_ip, login_status, login_code)]], fields=[log_id, event_time, user_no, real_ip, login_status, login_code])",
      "pact": "Operator",
      "contents": "SourceConversion(table=[default_catalog.default_database.kafka_source_table, source: [Kafka011TableSource(log_id, event_time, user_no, real_ip, login_status, login_code)]], fields=[log_id, event_time, user_no, real_ip, login_status, login_code])",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 6,
          "ship_strategy": "FORWARD",
          "side": "second"
        }
      ]
    },
    {
      "id": 8,
      "type": "Calc(select=[log_id, event_time, user_no, login_status], where=[(user_no <> _UTF-16LE'0001':VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\")])",
      "pact": "Operator",
      "contents": "Calc(select=[log_id, event_time, user_no, login_status], where=[(user_no <> _UTF-16LE'0001':VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\")])",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 7,
          "ship_strategy": "FORWARD",
          "side": "second"
        }
      ]
    },
    {
      "id": 9,
      "type": "SinkConversionToRow",
      "pact": "Operator",
      "contents": "SinkConversionToRow",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 8,
          "ship_strategy": "FORWARD",
          "side": "second"
        }
      ]
    },
    {
      "id": 5,
      "type": "Sink: Kafka011TableSink(log_id, event_time, user_no, login_status)",
      "pact": "Data Sink",
      "contents": "Sink: Kafka011TableSink(log_id, event_time, user_no, login_status)",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 4,
          "ship_strategy": "FORWARD",
          "side": "second"
        }
      ]
    },
    {
      "id": 10,
      "type": "Sink: Kafka011TableSink(log_id, event_time, user_no, login_status)",
      "pact": "Data Sink",
      "contents": "Sink: Kafka011TableSink(log_id, event_time, user_no, login_status)",
      "parallelism": 1,
      "predecessors": [
        {
          "id": 9,
          "ship_strategy": "FORWARD",
          "side": "second"
        }
      ]
    }
  ]
}
