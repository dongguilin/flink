ExecutionPlan: |+
  {
    "nodes" : [ {
      "id" : 1,
      "type" : "Source: Kafka011TableSource(log_id, event_time, user_no, real_ip, login_status, row_time)",
      "pact" : "Data Source",
      "contents" : "Source: Kafka011TableSource(log_id, event_time, user_no, real_ip, login_status, row_time)",
      "parallelism" : 1
    }, {
      "id" : 2,
      "type" : "from: (log_id, event_time, row_time, user_no, real_ip, login_status)",
      "pact" : "Operator",
      "contents" : "from: (log_id, event_time, row_time, user_no, real_ip, login_status)",
      "parallelism" : 1,
      "predecessors" : [ {
        "id" : 1,
        "ship_strategy" : "FORWARD",
        "side" : "second"
      } ]
    }, {
      "id" : 3,
      "type" : "Timestamps/Watermarks",
      "pact" : "Operator",
      "contents" : "Timestamps/Watermarks",
      "parallelism" : 1,
      "predecessors" : [ {
        "id" : 2,
        "ship_strategy" : "FORWARD",
        "side" : "second"
      } ]
    }, {
      "id" : 4,
      "type" : "to: Row",
      "pact" : "Operator",
      "contents" : "to: Row",
      "parallelism" : 1,
      "predecessors" : [ {
        "id" : 3,
        "ship_strategy" : "FORWARD",
        "side" : "second"
      } ]
    }, {
      "id" : 5,
      "type" : "Map",
      "pact" : "Operator",
      "contents" : "Map",
      "parallelism" : 1,
      "predecessors" : [ {
        "id" : 4,
        "ship_strategy" : "FORWARD",
        "side" : "second"
      } ]
    }, {
      "id" : 7,
      "type" : "Source: Kafka011TableSource(log_id, event_time, user_no, real_ip, login_status, row_time)",
      "pact" : "Data Source",
      "contents" : "Source: Kafka011TableSource(log_id, event_time, user_no, real_ip, login_status, row_time)",
      "parallelism" : 1
    }, {
      "id" : 8,
      "type" : "from: (row_time, user_no, login_status)",
      "pact" : "Operator",
      "contents" : "from: (row_time, user_no, login_status)",
      "parallelism" : 1,
      "predecessors" : [ {
        "id" : 7,
        "ship_strategy" : "FORWARD",
        "side" : "second"
      } ]
    }, {
      "id" : 9,
      "type" : "Timestamps/Watermarks",
      "pact" : "Operator",
      "contents" : "Timestamps/Watermarks",
      "parallelism" : 1,
      "predecessors" : [ {
        "id" : 8,
        "ship_strategy" : "FORWARD",
        "side" : "second"
      } ]
    }, {
      "id" : 10,
      "type" : "where: (IS FALSE(login_status)), select: (row_time, user_no)",
      "pact" : "Operator",
      "contents" : "where: (IS FALSE(login_status)), select: (row_time, user_no)",
      "parallelism" : 1,
      "predecessors" : [ {
        "id" : 9,
        "ship_strategy" : "FORWARD",
        "side" : "second"
      } ]
    }, {
      "id" : 11,
      "type" : "time attribute: (row_time)",
      "pact" : "Operator",
      "contents" : "time attribute: (row_time)",
      "parallelism" : 1,
      "predecessors" : [ {
        "id" : 10,
        "ship_strategy" : "FORWARD",
        "side" : "second"
      } ]
    }, {
      "id" : 13,
      "type" : "groupBy: (user_no), window: (SlidingGroupWindow('w$, 'row_time, 600000.millis, 60000.millis)), select: (user_no, COUNT(*) AS error_times, start('w$) AS w$start, end('w$) AS w$end, rowtime('w$) AS w$rowtime, proctime('w$) AS w$proctime)",
      "pact" : "Operator",
      "contents" : "groupBy: (user_no), window: (SlidingGroupWindow('w$, 'row_time, 600000.millis, 60000.millis)), select: (user_no, COUNT(*) AS error_times, start('w$) AS w$start, end('w$) AS w$end, rowtime('w$) AS w$rowtime, proctime('w$) AS w$proctime)",
      "parallelism" : 1,
      "predecessors" : [ {
        "id" : 11,
        "ship_strategy" : "HASH",
        "side" : "second"
      } ]
    }, {
      "id" : 14,
      "type" : "select: (w$start AS hop_start, w$end AS hop_end, CAST(CAST(w$rowtime)) AS hop_rowtime, user_no, error_times)",
      "pact" : "Operator",
      "contents" : "select: (w$start AS hop_start, w$end AS hop_end, CAST(CAST(w$rowtime)) AS hop_rowtime, user_no, error_times)",
      "parallelism" : 1,
      "predecessors" : [ {
        "id" : 13,
        "ship_strategy" : "FORWARD",
        "side" : "second"
      } ]
    }, {
      "id" : 15,
      "type" : "to: Row",
      "pact" : "Operator",
      "contents" : "to: Row",
      "parallelism" : 1,
      "predecessors" : [ {
        "id" : 14,
        "ship_strategy" : "FORWARD",
        "side" : "second"
      } ]
    }, {
      "id" : 6,
      "type" : "Sink: CsvTableSink(log_id, event_time, row_time, user_no, real_ip, login_status)",
      "pact" : "Data Sink",
      "contents" : "Sink: CsvTableSink(log_id, event_time, row_time, user_no, real_ip, login_status)",
      "parallelism" : 1,
      "predecessors" : [ {
        "id" : 5,
        "ship_strategy" : "FORWARD",
        "side" : "second"
      } ]
    }, {
      "id" : 16,
      "type" : "Sink: Kafka011TableSink(*)",
      "pact" : "Data Sink",
      "contents" : "Sink: Kafka011TableSink(*)",
      "parallelism" : 1,
      "predecessors" : [ {
        "id" : 15,
        "ship_strategy" : "FORWARD",
        "side" : "second"
      } ]
    } ]
  }
